// src/components/WhyUsSection/WhyUsSection.tsx
import { useState, useEffect } from 'react'
import {
  FaUsers,
  FaCalendarCheck,
  FaStar,
  FaMagic,
  FaHeart,
  FaMapMarkerAlt,
  FaChevronDown,
} from 'react-icons/fa'

import styles from './WhyUsSection.module.css'

// üì∏ –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏ —Ñ–æ—Ç–æ –∏–∑ assets/gallery/
import img2 from '../../assets/gallery/2.jpg'
// import img3 from '../../assets/gallery/3.jpg'
import img4 from '../../assets/gallery/4.jpg'
import img5 from '../../assets/gallery/5.jpg'
import img6 from '../../assets/gallery/6.jpg'

const sliderImages = [
  { src: img2, alt: '–í–µ—Å–µ–ª—ã–π —Ö–æ—Ä–æ–≤–æ–¥ —Å –¥–µ—Ç—å–º–∏' },
  // { src: img3, alt: '–î–µ–¥ –ú–æ—Ä–æ–∑ –∏ –°–Ω–µ–≥—É—Ä–æ—á–∫–∞ –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–µ - –í—Ä—É—á–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤' },
  { src: img4, alt: '–ö–æ—Å—Ç—é–º—ã –≤ –¥–µ—Ç–∞–ª—è—Ö' },
  { src: img5, alt: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥' },
  { src: img6, alt: '–ü—Ä–∞–∑–¥–Ω–∏–∫ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ' },
]

type Advantage = {
  icon: React.FC<{ className?: string }>
  title: string
  desc: string
  priority?: boolean
}

export default function WhyUsSection() {
  const [currentSlide, setCurrentSlide] = useState(0)
  const [showAll, setShowAll] = useState(false)

  // –ê–≤—Ç–æ—Å–ª–∞–π–¥–µ—Ä
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % sliderImages.length)
    }, 4000)
    return () => clearInterval(interval)
  }, [])

  const advantages: Advantage[] = [
    {
      icon: FaUsers,
      title: '–õ—é–±–∞—è –≤–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞',
      desc: '–û—Ç 1 –≥–æ–¥–∞ –¥–æ 16 –ª–µ—Ç ‚Äî –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ–º—Å—è –ø–æ–¥ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞!',
      priority: true,
    },
    {
      icon: FaCalendarCheck,
      title: '17 –ª–µ—Ç –æ–ø—ã—Ç–∞',
      desc: '–†–∞–¥—É—é –û—Ä–µ–Ω–±—É—Ä–≥ —Å 2008 –≥–æ–¥–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –≤–æ–ª—à–µ–±—Å—Ç–≤–æ!',
      priority: true,
    },
    {
      icon: FaStar,
      title: '10 000+ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤',
      desc: '–û–¥–∏–Ω –∏–∑ –ª—É—á—à–∏—Ö –∞–Ω–∏–º–∞—Ç–æ—Ä–æ–≤ –≥–æ—Ä–æ–¥–∞ ‚Äî —Ç—ã—Å—è—á–∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö —Å–µ–º–µ–π!',
      priority: true,
    },
    {
      icon: FaMagic,
      title: '–õ—é–±–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
      desc: '–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è, –ù–æ–≤—ã–π –≥–æ–¥, –≤—ã–ø—É—Å–∫–Ω–æ–π, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ ‚Äî –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –∏–¥–µ–∞–ª—å–Ω–æ!',
    },
    {
      icon: FaHeart,
      title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
      desc: '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥ –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞ ‚Äî –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤!',
    },
    {
      icon: FaMapMarkerAlt,
      title: '–í—ã–µ–∑–¥ –≤–µ–∑–¥–µ',
      desc: '–î–æ–º, —à–∫–æ–ª–∞, —É–ª–∏—Ü–∞, –∑–∞ –≥–æ—Ä–æ–¥ ‚Äî –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º—Å—è –ø–æ–¥ –ª—é–±–æ–µ –º–µ—Å—Ç–æ!',
    },
  ]

  const visibleAdvantages = showAll
    ? advantages
    : advantages.filter((a) => a.priority)

  const nextSlide = () =>
    setCurrentSlide((prev) => (prev + 1) % sliderImages.length)
  const prevSlide = () =>
    setCurrentSlide(
      (prev) => (prev - 1 + sliderImages.length) % sliderImages.length
    )

  return (
    <section className={styles.whyUsSection}>
      {/* –§–æ–Ω */}
      <div className={styles.whyUsBg}></div>

      <div className="container">
        <h2 className={styles.title}>
          –ü–æ—á–µ–º—É <span className={styles.gradientText}>–ú–∏—Ä –£–ª—ã–±–æ–∫</span>?
        </h2>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∏ */}
        <div className={styles.advantagesGrid}>
          {visibleAdvantages.map((adv, i) => {
            const Icon = adv.icon
            return (
              <div
                key={i}
                className={styles.advantageCard}
                style={{ animationDelay: `${i * 0.1}s` }}
              >
                <div className={styles.advantageIcon}>
                  <Icon />
                </div>
                <div>
                  <h3>{adv.title}</h3>
                  <p>{adv.desc}</p>
                </div>
              </div>
            )
          })}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë" ‚Äî —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª–µ */}
        {!showAll && advantages.some((a) => !a.priority) && (
          <div className={styles.showMoreWrapper}>
            <button
              className={styles.showMoreBtn}
              onClick={() => setShowAll(true)}
            >
              –ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë <FaChevronDown className={styles.rotateIcon} />
            </button>
          </div>
        )}

        {/* –°–ª–∞–π–¥–µ—Ä */}
        <div className={styles.slider}>
          <div className={styles.sliderWrapper}>
            <div className={styles.sliderImage}>
              <img
                src={sliderImages[currentSlide].src}
                alt={sliderImages[currentSlide].alt}
                loading="lazy"
              />
            </div>
            <div className={styles.sliderNav}>
              <button
                onClick={prevSlide}
                className={`${styles.navBtn} ${styles.prev}`}
              >
                ‚ùÆ
              </button>
              <div className={styles.sliderDots}>
                {sliderImages.map((_, i) => (
                  <button
                    key={i}
                    className={
                      i === currentSlide
                        ? `${styles.dot} ${styles.active}`
                        : styles.dot
                    }
                    onClick={() => setCurrentSlide(i)}
                  />
                ))}
              </div>
              <button
                onClick={nextSlide}
                className={`${styles.navBtn} ${styles.next}`}
              >
                ‚ùØ
              </button>
            </div>
            <div className={styles.sliderCounter}>
              {currentSlide + 1} / {sliderImages.length}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
